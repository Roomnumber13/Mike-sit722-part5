# 
# GitHub Actions workflow.
#
# Automatically deploys the Node.js microservice to Kubernetes on push to the main branch.
# For real use you might want to restrict this to the "prod" branch.
#

name: Deploy book-catalog

on:
  #
  # Deploy the microservice on push to any branch of this code repository.
  #
  push: 
    branches:
      - main
    paths:
      - 'book_catalog/**'

  #
  # Allows deployment to be invoked manually through the GitHub Actions user interface.
  #
  workflow_dispatch: 
env:
  # Azure application (client) ID
  AZURE_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}

  # Azure subscription ID
  AZURE_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

  # Azure Active Directory tenant ID
  AZURE_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

  # Azure Resource Group to use for deploying resources
  AZURE_RESOURCE_GROUP: ""

jobs:

  deploy:
    runs-on: ubuntu-latest
    
    env:
      VERSION: ${{ github.sha }}
      CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
      REGISTRY_UN: ${{ secrets.REGISTRY_UN }}
      REGISTRY_PW: ${{ secrets.REGISTRY_PW  }}
      NAME: book-catalog
      FILENAME: deployment
      DIRECTORY: book_catalog

    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3
      - name: "Az CLI login"
        uses: Azure/login@v2.1.0
        with:
            client-id: ${{ env.AZURE_CLIENT_ID }}
            tenant-id: ${{ env.AZURE_TENANT_ID }}
            subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}
      
      # Checks-out your repository under $GITHUB_WORKSPACE.
      - uses: actions/checkout@v3

      #Override permission to build images
      - name: Make build-image.sh executable
        run: chmod +x ./scripts/build-image.sh

      # Builds the Docker image.
      #
      - name: Build
        run: ./scripts/build-image.sh

      #Override permission to push images
      - name: Make push-image.sh executable
        run: chmod +x ./scripts/push-image.sh

      # Publishes the Docker image to the container registry.
      #
      - name: Publish
        run: ./scripts/push-image.sh

      #
      # Installs Kubectl and connects it to the cluster.
      #
      # https://github.com/marketplace/actions/kubernetes-cli-kubectl
      #
      - uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}
          kubectl-version: v1.24.2
      
      #Override permission to push images
      - name: Make deploy.sh executable
        run: chmod +x ./scripts/deploy.sh
      # Expands the configuration template and deploys the microservice.
      #
      - name: Deploy
        run: ./scripts/deploy.sh